@import 'src/styles/main';

@mixin make-container($padding-x: $container-padding-x) {
    width: 100%;
    padding-right: $padding-x !important;
    padding-left: $padding-x !important;
}

.custom-container {
    @include media-breakpoint-down(sm) {
        @include make-container(32px);
    }
}

.main-layout {
    display: flex;
    padding-top: 130px;
    padding-bottom: 60px;
    min-height: 100vh;
    background-color: $color-background;
    background-image: url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg'), url('../../assets/images/star.svg');
    background-position: percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100)), percentage(calc(random(100) / 100)) percentage(calc(random(100) / 100));
    background-repeat: no-repeat no-repeat;
    overflow: hidden;
    white-space: pre-line;
}

.fill {
    flex: 1 1 auto;
}

#get-keplr-modal {
    .keplr-icon {
        width: 76px;
        height: 76px;
    }

    h3 {
        color: $color-black;
        font-weight: 400;
        font-size: 24px;
    }

    p {
        color: $color-black;
        font-weight: 300;
        font-size: 16px;
    }

    a {
        color: $color-primary;
        font-weight: 300;
        font-size: 14px;
    }
}
